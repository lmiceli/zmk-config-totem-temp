//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
       
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include "includes/mouse.dtsi"
// todo, add mouse and fix numbers
// todo merge in one repo
// todo urob
// https://github.com/urob/zmk-config?tab=readme-ov-file

#define BASE    0
#define NAV     1
#define ARROW   2
#define MOU     3
#define SYM     4
#define NUM     5
#define FUN     6

#define AS(keycode) &as LS(keycode) keycode     // Autoshift Macro

/ {
behaviors {
    as: auto_shift {
    compatible = "zmk,behavior-hold-tap";
    label = "AUTO_SHIFT";
    #binding-cells = <2>;
    tapping-term-ms = <135>;
    quick-tap-ms = <0>;
    flavor = "tap-preferred";
    bindings = <&kp>, <&kp>;
};

hm: homerow_mods {
    compatible = "zmk,behavior-hold-tap";
    label = "HOMEROW_MODS";
    #binding-cells = <2>;
    tapping-term-ms = <175>;
    quick-tap-ms = <0>;
    require-prior-idle-ms = <75>;
    flavor = "tap-preferred";
    bindings = <&kp>, <&kp>;
};

hmp: homerow_mods_pinky {
    compatible = "zmk,behavior-hold-tap";
    label = " ";
    #binding-cells = <2>;
    tapping-term-ms = <200>;
    quick-tap-ms = <0>;
    require-prior-idle-ms = <75>;
    flavor = "tap-preferred";
    bindings = <&kp>, <&kp>;
};
};

// urob wip. LB5 y RB5 tmb? deleted here

//        flavor = "balanced";
//        tapping-term-ms = <280>;
//        quick-tap-ms = <175>;
//        require-prior-idle-ms = <150>;
//        bindings = <&kp>, <&kp>;
//        hold-trigger-key-positions = <KEYS_R THUMBS>;
//        hold-trigger-on-release;

combos {
compatible = "zmk,combos";

// Combos for media player.
// I often switch songs while drawing, so I assign the
// combos on left hand side.

combo_med_next {
timeout-ms = <50>;
key-positions = <2 3>;
bindings = <&kp C_NEXT>;
};

combo_med_prev {
timeout-ms = <50>;
key-positions = <1 2>;
bindings = <&kp C_PREV>;
};

combo_med_pp {
timeout-ms = <50>;
key-positions = <1 4>;
bindings = <&kp C_PP>;
};

combo_med_stop {
timeout-ms = <50>;
key-positions = <1 3>;
bindings = <&kp C_STOP>;
};

combo_med_vol_up {
timeout-ms = <50>; // FT
key-positions = <2 13>;
bindings = <&kp C_VOL_UP>;
};

combo_med_vol_dn {
timeout-ms = <50>; // PS
key-positions = <3 12>;
bindings = <&kp C_VOL_DN>;
};

combo_med_mute {
timeout-ms = <50>; // SG
key-positions = <12 14>;
bindings = <&kp C_MUTE>;
};
};

// things that want to do while hand in mouse?

keymap {
compatible = "zmk,keymap";

BASE {
bindings = <
          &hmp LEFT_CONTROL Q  &kp W        &kp F        &kp P         &kp B                                       &kp J          &kp L          &kp U        &kp Y        &hmp LCTRL LA(BSPC)
          &kp A                &hm LALT R   &hm  LGUI S  &hm  LSHFT T  &kp G                                       &kp M          &hm LSHFT N    &hm LGUI E   &hm LALT I   &lt FUN O
&kp Q     &kp Z                &kp X        &kp C        &kp D         &kp V                                       &kp K          &kp H          &kp COMMA    &kp DOT      &kp FSLH            &kp BSPC
                                                 &lt MOU TAB   &lt NAV ESC  &lt ARROW SPACE          &lt SYM ENTER   &lt NUM BSPC  &hm LGUI DEL
>;
};

NAV {
bindings = <
&none  &mkp MB3          &mkp MB2        &mkp MB1             &none                                 &kp LC(LA(LG(N1)))  &kp LC(LA(LG(N2)))  &kp LC(LA(LG(N3)))  &kp LC(LA(LG(N4)))  &kp LC(LA(LG(N5)))
&none  &kp LC(LG(LEFT))  &kp LC(LG(UP))  &kp LC(LG(RIGHT))  &none                                 &kp LG(PLUS)        &kp LC(LEFT)        &kp LC(RIGHT)       &kp C_VOL_DN        &kp C_VOL_UP
&none &none  &none             &none           &none              &none                                 &kp LG(MINUS)       &kp LS(LC(COMMA))   &kp LS(LC(DOT))     &kp C_PLAY          &kp C_MUTE &none
        &none             &none   &none    &kp LG(LA(LEFT))  &kp LS(LC(DELETE))  &kp LA(LG(RIGHT))
>;
};

ARROW {
bindings = <
&kp LCTRL     &mkp MB3  &mkp MB2   &mkp MB1   &none                          &kp PG_UP        &kp HOME  &kp UP    &kp END    &kp PG_DN
        &kp LA(LEFT)  &kp LALT  &kp LGUI  &kp LSHFT    &kp LA(RIGHT)                  &kp F11          &kp LEFT  &kp DOWN  &kp RIGHT  &kp CAPS
&none &none         &none     &none     &none        &none                          &kp LG(PAGE_UP)  &kp F7    &kp F8    &kp F9     &kp LG(PAGE_DOWN) &none
            &kp LA(TAB)  &none   &none    &kp BSPC  &kp DEL  &none
>;
};

MOU {
bindings = <
        &kp LCTRL    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &none                             &none     &msc SCRL_UP    &mmv MOVE_UP    &msc SCRL_DOWN   &none
        &none        &kp LALT      &kp LGUI      &kp LSHFT     &none                             &none     &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none
&none   &bootloader  &sys_reset    &none         &bt BT_CLR    &bt BT_CLR_ALL                    &none     &msc SCRL_LEFT  &none           &msc SCRL_RIGHT  &none  &none
        &trans       &none         &trans                                                        &mkp MB1  &mkp MB2  &mkp MB3
>;
};

SYM {
bindings = <
&kp SQT    &kp LT     &kp GT     &kp DQT        &kp DOT                           &kp AMPS   &kp LBKT  &kp RBKT  &kp SEMICOLON  &kp PERCENT
&kp EXCL   &kp MINUS  &kp PLUS   &kp EQUAL      &kp HASH                          &kp PIPE   &kp LPAR  &kp RPAR  &kp COLON      &kp QUESTION
&none &kp CARET  &kp FSLH   &kp ASTRK  &kp BACKSLASH  &kp GRAVE                         &kp TILDE  &kp LBRC  &kp RBRC  &kp DOLLAR     &kp AT &none
&kp BSPC         &kp LCTRL  &kp UNDERSCORE                   &none  &none      &none
>;
};

NUM {
bindings = <
&none   &kp N7  &kp N8  &kp N9         &none                         &none  &none      &none     &none     &kp LCTRL
&kp N0  &kp N4  &kp N5  &kp N6         &none                         &none  &kp LSHFT  &kp LGUI  &kp LALT  &none
        &none         &none   &kp N1  &kp N2  &kp N3         &none                         &none  &none      &none     &none     &none &none
&kp BACKSPACE  &kp SPACE  &kp DELETE  &none  &none  &none
>;
};

FUN {
bindings = <
&kp F12  &kp F7  &kp F8  &kp F9   &kp PSCRN                                &bt BT_CLR_ALL  &none      &none     &kp LCTRL   &none
        &kp F11  &kp F4  &kp F5  &kp F6   &kp SLCK                                 &none           &kp LSHFT  &kp LGUI  &kp LALT    &none
        &none  &kp F10  &kp F1  &kp F2  &kp F3   &kp PAUSE_BREAK                          &none           &none      &none     &sys_reset  &bootloader &none
&kp ESC  &kp SPACE        &kp TAB  &kp BACKSPACE  &kp ENTER       &kp DEL
>;
};
};
};
